//Sort Students by marks


//METHOD 1:using only pair



#include <stdio.h>
#include<bits/stdc++.h>
using namespace std;

void getSorted(int roll[], int marks[],int n)
{
    pair<int,int>pa[n];
    for(int i=0;i<n;i++)
    {
        pa[i] = {marks[i],roll[i]};
    }
    sort(pa,pa+n);
    for(int i=n-1;i>=0;i--)
    {
        cout<<pa[i].first<<" "<<pa[i].second<<endl;
    }
}

int main()
{
    int roll[] = {10,108,103,105};
    int marks[] = {70,80,40,90};
    int n= sizeof(roll)/sizeof(roll[0]);
    getSorted(roll,marks,n);
    return 0;
}

output
90 105                                                          
80 108                                                          
70 10                                                           
40 103                                                          
      






//METHOD 2: using pair and vector

#include <stdio.h>
#include<bits/stdc++.h>
using namespace std;

bool myCmp(pair<int,int>p1,pair<int,int>p2)
{
    return p1.second>p2.second;
}

void getSorted(int roll[], int marks[],int n)
{
    vector<pair<int,int>>v;
    for(int i=0;i<n;i++)
    {
        v.push_back({roll[i],marks[i]});
    }
    sort(v.begin(),v.end(),myCmp);
    for(int i=0;i<n;i++)
    {
        cout<<v[i].first<<" "<<v[i].second<<endl;
    }
}

int main()
{
    int roll[] = {10,108,103,105};
    int marks[] = {70,80,40,90};
    int n= sizeof(roll)/sizeof(roll[0]);
    getSorted(roll,marks,n);
    return 0;
}


output:

105 90                                                          
108 80                                                          
10 70                                                           
103 40  
