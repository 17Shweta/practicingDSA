//Keep indexes after sorting



METHOD 1: using pair

#include <stdio.h>
#include<bits/stdc++.h>
using namespace std;

void keepIndex(int arr[],int n)
{
  pair<int,int>pa[n];
  for(int i=0;i<n;i++)
  {
      pa[i]={arr[i],i};
  }
  sort(pa,pa+n);
  for(int i=0;i<n;i++)
  {
      cout<<pa[i].first<<" "<<pa[i].second<<endl;
  }
}

int main()
{
    int arr[] = {10,30,40,20};
    int n = sizeof(arr)/sizeof(arr[0]);
    keepIndex(arr,n);
    return 0;
}
output:
10 0                                                                                                                                          
20 3                                                                                                                                          
30 1                                                                                                                                          
40 2       
















METHOD 2: using vector and pair

#include <stdio.h>
#include<bits/stdc++.h>
using namespace std;

void keepIndex(int arr[],int n)
{
  vector<pair<int,int>>v;
  for(int i=0;i<n;i++)
  {
      v.push_back({arr[i],i});
  }
  sort(v.begin(),v.end());
  for(auto x:v)
  {
      cout<<x.first<<" "<<x.second<<endl;
  }
}

int main()
{
    int arr[] = {10,30,40,20};
    int n = sizeof(arr)/sizeof(arr[0]);
    keepIndex(arr,n);
    return 0;
}

output:
10 0                                                                                                                                          
20 3                                                                                                                                          
30 1                                                                                                                                          
40 2       


      
